<?xml version="1.0" encoding="UTF-8"?>

<!-- ===== #28. mapper 기본 설정 ===== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- ===== #29. 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) ===== --> 
<mapper namespace="BSB">

	
	<!--  ==== #47. 로그인 여부 알아오기 및 마지막으로 로그인한 날짜 기록하기 ==== -->
 	<select id="getLoginMember" parameterType="HashMap" resultType="com.spring.bookmanage.login.BSBmodel.BSBMemberVO">
 	
	
		select memberid, name
		from member
		where status = 0 and
			  memberid = #{MEMBERID} and
			  pwd = #{PWD}
		 	
 	</select> 
 	
 	
 	 <!-- // ==== #115. 검색조건에 만족하는 총게시물 갯수를 알아오기 ==== -->
	 <select id="getTotalCountWithSearch" parameterType="HashMap" resultType="int">
	 
	 	select count(*)
	 	from board
	 	where status = 0
	 	and ${COLNAME} like '%'|| #{SEARCH} ||'%'
	 
	 </select>
	
	
	
	<!-- // ==== #116. 검색조건이 없는 총게시물 갯수를 알아오기 ==== -->
	 <select id="getTotalCountNoSearch" resultType="int">
	 
	 	select count(*)
	 	from board
	 	where status = 0
	 	
	 </select>
	 
	  <select id="boardListPaging" parameterType="HashMap" resultType="com.spring.bookmanage.board.BSBmodel.BSBboardVO"> 
 			select RNO, idx, name, subject, readCount, regDate, commentCount, groupno, root, depthno
			from
			(
			    select rownum AS RNO
	                   ,idx, name, subject, readCount, regDate, commentCount, groupno, root, depthno
	                   
	    		from
   				(
		    	    select  idx, name, subject, readCount
	                       ,to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate
	                       ,commentCount, groupno, root, depthno
	                       
			        from board
			        where status = 0
			        <if test='SEARCH != null and SEARCH !="" and SEARCH != "null" '>
			        and ${COLNAME} like '%'|| #{SEARCH} ||'%'
			        </if>
	 				start with root = 0
			        connect by prior idx = root
			        order siblings by groupno desc, idx desc
			       			        
			    )V
			)T
			where RNO between #{STARTRNO} and #{ENDRNO}
	 
	 </select> 
	 
	  <!-- ===== #56. 글쓰기(파일첨부가 없는 글쓰기) ==== -->
	  <insert id="add" parameterType="com.spring.bookmanage.board.BSBmodel.BSBboardVO">
		  <if test="root.equals('')"> <!-- 원글 -->
		insert into Board(idx, libid_fk, name, subject, content, pw, readCount, regDate, status, groupno, root, depthno)
		values(board_seq.nextval, #{libid_fk}, #{name}, #{subject}, #{content}, #{pw}, default, default, 0, #{groupno}, 0, 0)
		</if>
		<if test="!root.equals('')"> <!-- 답글 -->
		insert into Board(idx, libid_fk, name, subject, content, pw, readcount, regDate, status, groupno, root, depthno)
		values(board_seq.nextval, #{libid_fk}, #{name}, #{subject}, #{content}, #{pw}, default, default, 0, #{groupno}, #{root}, #{depthno}+1)
		</if>
	
	</insert>  
	
	<select id="getView" parameterType="String" resultType="com.spring.bookmanage.board.BSBmodel.BSBboardVO">
					
			  select previousidx, previoussubject, idx, libid_fk, name, subject, content, readCount, regDate ,commentCount
			        ,fileName, orgFilename, fileSize, groupno, root, depthno, nextidx, nextsubject
			  from
			  (
			  select  
			  
			  		lag(idx,1)over(order by idx desc) as previousidx
			        , lag(subject,1)over(order by idx desc) as previoussubject	
			        		        
			  		,idx, libid_fk, name, subject, content, readCount
			        ,to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') AS regDate
			        ,commentCount
			        ,fileName, orgFilename, fileSize, groupno, root, depthno
			        
			        , lead(idx,1)over(order by idx desc) as nextidx
			        , lead(subject,1)over(order by idx desc) as nextsubject
			        
			    from board
			    where status = 0
			    )V 
                where V.idx = #{idx}
	
	</select>
	
	<!-- // ===== #89. 댓글쓰기 ===== -->
	<insert id="addComment" parameterType="com.spring.bookmanage.board.BSBmodel.BSBcommentVO">
		
		insert into reply(idx, libid_fk, name, content, regdate, status, parentidx)
		values(reply_seq.nextval, #{libid_fk}, #{name}, #{content}, sysdate, 0, #{parentidx})
	
	</insert>
	
	<!-- // ===== #90. 댓글쓰기 이후에 댓글의 갯수(commentCount 컬럼) 1증가 시키기===== -->
	<update id="updateCommentCount" parameterType="String">
	
		update board set commentCount = commentCount + 1
		where idx = #{parentidx}
	
	</update>
	
	
	<!-- //  ===== #95-1. 원글에 글번호에 대한 댓글중 페이지 번호에 해당하는 댓글만 조회헤온다. ===== -->
	<select id="listComment" parameterType="HashMap" resultType="com.spring.bookmanage.board.BSBmodel.BSBcommentVO">
				
			select idx, name, content, regdate
			from
				(
				    select rownum as rno, idx, name, content, regdate
				    from
				    (
				        select idx, name, content, to_char(regdate, 'yyyy-mm-dd hh24:mi:ss') AS regdate
				        from reply
				        where parentidx = #{IDX} and status = 0
				        order by idx desc
				    )V
				)T
			where rno between #{RNO1} and #{RNO2}
	
	
	</select>
	
	<!-- //  ===== #95-2. 원글 글번호에 해당하는 댓글의 총갯수를 알아오기 -->
	<select id="getCommentTotalCount" parameterType="HashMap" resultType="int">
	
		select count(*)
		from reply
		where parentidx = #{IDX} and status = 0
		
	</select>
	
	<!-- // ===== #73. 글수정 및 글삭제시 암호일치 여부 알아오기 ===== -->
	<select id="checkPW" parameterType="HashMap" resultType="int">
	
		select count(*)
		from board
		where idx = #{IDX} and pw = #{PW}
	
	</select>
	
	 <!-- // ==== #103. 원글에 딸린 댓글이 있는지 없는지 확인하기 -->
	<select id="isExistsComment" parameterType="HashMap" resultType="int">
			
			select count(*)
			from reply 
			where parentidx = #{IDX} and status = 0
	
	</select>
	
	<!-- // ===== #81. 글 1개 삭제하기(update 로 처리함) ===== -->
	<update id="deleteContent" parameterType="HashMap">
	
		update board set status = 1
		where idx = #{IDX}
	
	</update>
	
	<!-- // ==== #104. 원글에 딸린 댓글 삭제하기 ==== -->
	<update id="delComment" parameterType="HashMap">
			
			update reply set status = 1
			where parentidx = #{IDX}
			
	</update>
	
	 <!-- // ==== #129. tblBoard 테이블에서 groupno 컬럼의 최대값 알아오기 -->
	 <select id="getGroupnoMax" resultType="int">
	 	select nvl(max(groupno), 0)
	 	from board
	 </select>
	 
	 
	  <!-- ===== #143. 글쓰기(파일첨부가 있는 글쓰기) ====== -->
	 <insert id="add_withFile" parameterType="com.spring.bookmanage.board.BSBmodel.BSBboardVO">
		 <if test="root.equals('')"> <!-- 원글 -->
		insert into Board(idx, libid_fk, name, subject, content, pw, readcount, regDate, status, groupno, fileName, orgFilename, fileSize, root, depthno)
		values(board_seq.nextval, #{libid_fk}, #{name}, #{subject}, #{content}, #{pw}, default, default, 0, #{groupno}, #{fileName}, #{orgFilename}, #{fileSize}, 0, 0)
		</if>
		<if test="!root.equals('')"> <!-- 답글 -->
		insert into Board(idx, libid_fk, name, subject, content, pw, readcount, regDate, status, groupno, root, depthno, fileName, orgFilename, fileSize)
		values(board_seq.nextval, #{libid_fk}, #{name}, #{subject}, #{content}, #{pw}, default, default, 0, #{groupno}, #{root}, #{depthno}+1, #{fileName}, #{orgFilename}, #{fileSize})
		</if>		
	 </insert>
	
	
	<!-- // ==== # 댓글 삭제하기 ==== -->
	<update id="commentdel" parameterType="HashMap">
			
			update reply set status = 1
			where parentidx = #{ORGIDX} and idx = #{IDX}
			
	</update>
	
 		<!-- // ===== #90. 댓글삭제 이후에 댓글의 갯수(commentCount 컬럼) 1감소 시키기===== -->
	<update id="updateCommentdelCount" parameterType="String">
	
		update board set commentCount = commentCount - 1
		where idx = #{ORGIDX}
	
	</update>
	
	<update id="updateContent" parameterType="HashMap">
	
		update board set subject = #{SUBJECT}
		                   ,content = #{CONTENT}
		where idx = #{IDX}
	
	
	</update>
	
	<!-- // ===== #65. 글1개를 보여줄때 조회수(readCount) 1증가 시키기 ==== -->
	<update id="setAddReadCount" parameterType="String">
		update board set readcount = readcount + 1
		where status = 0 and idx = #{idx}
	
	</update>
	
	
	
	
	

</mapper>