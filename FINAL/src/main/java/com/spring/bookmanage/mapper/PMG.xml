<?xml version="1.0" encoding="UTF-8"?>

<!-- ===== mapper 기본 설정 ===== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<!-- ===== 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) ===== --> 
<mapper namespace="PMG">

	<!-- 회원 상세 정보 -->
	<select id="findOneMemberByIdx" parameterType="String" resultType="com.spring.bookmanage.member.PMGmodel.PMGMemberVO">	
		select idx, memberid, pwd, name, email, phone, addr1, addr2, post
		     , '(우)'|| post ||' '|| addr1 ||' '|| addr2 AS address
		     , substr(birth,1,4) ||'년'|| substr(birth,5,2) ||'월'|| substr(birth,7,2) ||'일' AS birth
		     , extract(year from sysdate) - substr(birth,1,4) + 1 AS age
		     , case gender when 0 then '남' else '여' end AS gender
		     , to_char(regdate, 'yyyy-mm-dd hh24:mi:ss') AS regDate
		     , to_char(lastdate, 'yyyy-mm-dd hh24:mi:ss') AS lastDate
		     , to_char(pwdate, 'yyyy-mm-dd hh24:mi:ss') AS pwDate
		     , case status when 0 then '활동'
		                   when 1 then '휴면'
		                   when 2 then '정지'
		                   when 3 then '탈퇴'
		                   else '' end AS status
		from member
		where idx = #{idx}	
	</select>

	<update id="EditActivityOneMemberByIdx" parameterType="String">
		update member set status = 0
		where idx = #{idx}
	</update>
	
	<update id="EditInactivityOneMemberByIdx" parameterType="String">
		update member set status = 0
		where idx = #{idx}
	</update>
	
	<update id="EditStopOneMemberByIdx" parameterType="String">
		update member set status = 2
		where idx = #{idx}
	</update>


	<resultMap type="HashMap" id="rentalMap">
		<result property="ROWNUM" column="rownum" javaType="String" />
		<result property="MEMBERID" column="memberid" javaType="String" />
		<result property="BOOKID" column="bookid" javaType="String" />
		<result property="TITLE" column="title" javaType="String" />
		<result property="AUTHOR" column="author" javaType="String" />
		<result property="CATEGORYNAME" column="categoryName" javaType="String" />
		<result property="PUBLISHERNAME" column="publisherName" javaType="String" />
		<result property="LIBRARYNAME" column="libraryName" javaType="String" />
		<result property="STATUS" column="status" javaType="String" />
		<result property="RENTALDATE" column="rentalDate" javaType="String" />
		<result property="DEADLINE" column="deadline" javaType="String" />
		<result property="RENEW" column="renew" javaType="String" />
		<result property="OVERDUE" column="overdue" javaType="int" />
		<result property="LATEFEE" column="latefee" javaType="int" />		
	</resultMap>
	<select id="memberBookRentalList" parameterType="String" resultMap="rentalMap">
		select rownum, memberid
		     , bookid, title, author
		     , C.cname AS categoryName
		     , pubname AS publisherName
		     , libname AS libraryName
		     , B.status AS status
		     , to_char(rentalDate, 'yyyy-mm-dd hh24:mi:ss') AS rentalDate
		     , to_char(deadline, 'yyyy-mm-dd') AS deadline
		     , case renew when 0 then 'X' else 'O' end AS renew
		     , trunc(sysdate - deadline) AS overdue
		     , trunc(sysdate - deadline) * 100 AS latefee
		from member M join rental R
		on M.memberid = R.memberid_fk
		join book B
		on R.bookid_fk = B.bookid
		join category C
		on B.ccode_fk = C.ccode
		join publisher P
		on B.pubcode_fk = P.pubcode
		join library L
		on B.libcode_fk = L.libcode
		where M.memberid = #{memberid}
		order by rownum desc	
	</select>


	<resultMap type="HashMap" id="reservationMap">
		<result property="ROWNUM" column="rownum" javaType="String" />
		<result property="MEMBERID" column="memberid" javaType="String" />
		<result property="BOOKID" column="bookid" javaType="String" />
		<result property="TITLE" column="title" javaType="String" />
		<result property="AUTHOR" column="author" javaType="String" />
		<result property="CATEGORYNAME" column="categoryName" javaType="String" />
		<result property="PUBLISHERNAME" column="publisherName" javaType="String" />
		<result property="LIBRARYNAME" column="libraryName" javaType="String" />
		<result property="STATUS" column="status" javaType="String" />
		<result property="RESERVEDATE" column="reservedate" javaType="String" />				
	</resultMap>
	<select id="memberBookReservationList" parameterType="String" resultMap="reservationMap">
		select rownum, memberid
		     , bookid, title, author
		     , C.cname AS categoryName
		     , pubname AS publisherName
		     , libname AS libraryName
		     , B.status AS status
		     , to_char(reservedate, 'yyyy-mm-dd') AS reservedate
		from member M join reservation R
		on M.memberid = R.memberid_fk
		join book B
		on R.bookid_fk = B.bookid
		join category C
		on B.ccode_fk = C.ccode
		join publisher P
		on B.pubcode_fk = P.pubcode
		join library L
		on B.libcode_fk = L.libcode
		where M.memberid = #{memberid}
		order by rownum desc
	</select>


</mapper>

