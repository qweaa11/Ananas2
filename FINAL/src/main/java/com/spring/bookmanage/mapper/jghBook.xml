<?xml version="1.0" encoding="UTF-8"?>

<!-- ===== #28. mapper 기본 설정 ===== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ===== #29. 루트 엘리먼트 및 네임스페이스 설정하기(이 네임스페이스의 이름은 프로젝트 전체 내에서 반드시 고유해야만 한다.) ===== -->
<mapper namespace="jghBook">

	<!-- 검색조건에 따른 삭제도서 목록 조회 -->
	<select id="findAllDeleteBookBySearchOption" parameterType="HashMap" resultType="com.spring.bookmanage.book.JGHmodel.DeleteBookVO">
		select distinct rownum as rno, substr(D.bookid,1, instr(D.bookid,'-',1,2)-1 ) as bookid
			, title, author, pubname, agecode, isbn, count, deldate, cleanerid
		from delete_book D join publisher P 
		on D.pubcode = P.pubcode
		join ( select substr(bookid,1, instr(bookid,'-',1,2)-1 ) as bookid,  count(*) as count
		        from delete_book group by substr(bookid,1, instr(bookid,'-',1,2)-1 )
		      ) V
		on substr(D.bookid, 1, instr(D.bookid,'-',1,2)-1 ) = V.bookid
		where ${colname} like '%'||#{searchWord}||'%'
	</select>
	
	<!-- 검색조건없는 삭제도서 목록 조회(도서삭제 목록 전체조회) -->
	<select id="findAllDeleteBook" resultType="com.spring.bookmanage.book.JGHmodel.DeleteBookVO">
		select distinct rownum as rno, substr(D.bookid,1, instr(D.bookid,'-',1,2)-1 ) as bookid
			, title, author, pubname, agecode, isbn, count, deldate, cleanerid
		from delete_book D join publisher P
		on D.pubcode = P.pubcode
		join ( select substr(bookid,1, instr(bookid,'-',1,2)-1 ) as bookid,  count(*) as count
		        from delete_book group by substr(bookid,1, instr(bookid,'-',1,2)-1 )
		     ) V
		on substr(D.bookid, 1, instr(D.bookid,'-',1,2)-1 ) = V.bookid
	</select>

</mapper>